[Server]
# Where to listen for connections
unix socket = /var/run/sepiida-server/server.sock
# How often hosts should be polled after connecting (in seconds)
poll frequency = 10
# How often to try to connect/retry connection to a host,
# note that the server delays an additional random(0.0, 9.9) seconds
connect frequency = 35
# Username to connect to hosts as
agent user = sepiida-agent
# Command used to connect to agent on hosts
agent cmd = sepiida-agent-connect
# Whether to log debug messages
log debug = False
# SSH key file to use to log in to hosts
SSH key = /etc/sepiida/sepiida-server-rsa
# Known hosts file to use, this is used to verify host keys
known hosts = /etc/sepiida/known_hosts

[Hosts]
# List of servers/workstations to poll.
# Keys (meaning the string before =) can be anything, but keys starting with @
# are used as host key aliases (equivalent to OpenSSH HostKeyAlias).
# Hosts = host1 host2 host3
# More hosts = host4 host5 host6
# @diskless = host7 host8 host9
# Ranges can also be specified: ws00-50 (inclusive) ws00-50.domain
# Remember to add host keys to the known_hosts file.
Hosts = localhost

[ACL]
# ACL/Filter section.
# SO_PEERCRED is used to get the UID of the connecting user.
# Syntax:
# <who> = <filter>: <allowed requests>
# who can be one or more of username or @group, and refers to the user
# connecting to Sepiida
# filter can be ALL or one or more of sameLocation or @group
# allowed requests can be ALL or one or more of:
# listUsers listServers listProcesses killProcesses getThumbnails vnc
# sendMessage logout login lockScreen openURL
# Example:
# @teachers = @students sameLocation: listUsers listServers sendMessage
# Explanation: teachers can get a list of students at the same location where
# they are logged in, and send them messages. They can also get a list of any
# servers/workstations where a student is working.
@adm = ALL: ALL
